<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context"
	 xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
   		http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">



	<mvc:annotation-driven />
	
	<!-- <tx:annotation-driven />
	
	<bean id="transactionManager" 	class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean> -->

	<bean id="tilesViewResolver"
	class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles.xml</value>
			</list>
		</property>
	</bean>  

 	<mvc:resources mapping="/resourcefiles/**" location="/resourcefiles/" /> 
 	<mvc:resources mapping="/assets/**" location="/assets/" />
 	
<!-- 	<resources mapping="/resourcefiles/**" location="/resourcefiles/" />  -->
<!-- 	<mvc:resources location="/resources/css/" mapping="/css/**" /> -->
	
<!-- 	<mvc:resources location="/resources/fonts/" mapping="/fonts/**" /> -->
<!-- 	<mvc:resources location="/resources/images/" mapping="/images/**" /> -->

	<bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/jsp/" />
		 <property name="suffix" value=".jsp" /> 
	</bean>

 		<bean id="multipartResolver"   class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
 		

<!-- 		@Bean(name = "multipartResolver")
		public CommonsMultipartResolver multipartResolver()
		{
		 CommonsMultipartResolver multipartResolver = new CommonsMultipartResolver();
		   multipartResolver.setMaxUploadSize(20848820);
		 return multipartResolver;
		} -->

	<context:property-placeholder location="/WEB-INF/conf/hibernate.properties" />
	<context:component-scan base-package="com.topaz.trading" />


	<!-- ******************************* HIBERNATE PROPERTIES ******************************** -->



		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">

		<property name="driverClassName" value="${hibernate.driver}" />
		
		<property name="url" value="${hibernate.url}"></property>
		<property name="username" value="${hibernate.user}"></property>
		<property name="password" value="${hibernate.password}"></property>

	</bean>


	<bean id="sessionFactory"  
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.topaz.trading" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>
	
	<bean id="dataSource2" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${hibernate.driver}"/>
        <property name="url" value="${hibernate.url}"/>
        <property name="username" value="${hibernate.user}"/>
        <property name="password" value="${hibernate.password}"/>
    </bean>

<!-- <bean id="dataSource2" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://192.168.1.112:5432/market_watch"/>
        <property name="username" value="postgres"/>
        <property name="password" value="postgres"/>
    </bean> -->
    
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource2"/>
       
    </bean>   

<bean id="mailSender"
		class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.pepipost.com" />
		<property name="port" value="25" />
		<property name="username" 	value="enrichpep" />
		<property name="password" value="Enrich@16" />

		<property name="javaMailProperties">

			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">false</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.debug.auth">true</prop>

			</props>
		</property>
	</bean>
	




	<bean id="myTransactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	 <tx:annotation-driven transaction-manager="myTransactionManager" /> 


	<!-- ************************** END HIBERNATE PROPERTIES ******************************** -->
	
	
	<!-- <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
  p:host-name="localhost" p:port="6379" p:use-pool="true"/>

  <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" 
  p:connection-factory-ref="jedisConnectionFactory"/> -->
  
</beans>