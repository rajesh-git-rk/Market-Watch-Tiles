//package com.topaz.trading.controller;
//
//
//
//
//import java.io.BufferedReader;
//import java.io.InputStreamReader;
//import java.io.UnsupportedEncodingException;
//import java.net.HttpURLConnection;
//import java.net.URL;
//import java.security.MessageDigest;
//import java.security.NoSuchAlgorithmException;
//import java.security.PrivateKey;
//import java.security.PublicKey;
//import java.util.ArrayList;
//import java.util.List;
//import java.util.regex.Pattern;
//
//import javax.servlet.http.HttpServletRequest;
//import javax.servlet.http.HttpServletResponse;
//import javax.servlet.http.HttpSession;
//
//import org.apache.logging.log4j.LogManager;
//import org.apache.logging.log4j.Logger;
//import org.json.simple.JSONObject;
//import org.json.simple.JSONValue;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.http.ResponseEntity;
//import org.springframework.stereotype.Controller;
//
//import org.springframework.web.bind.annotation.RequestMapping;
//import org.springframework.web.bind.annotation.RequestMethod;
//import org.springframework.web.bind.annotation.RequestParam;
//import org.springframework.web.bind.annotation.RestController;
//import org.springframework.web.servlet.ModelAndView;
//import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
//import org.springframework.web.servlet.resource.PathResourceResolver;
//
//import com.topaz.trading.Util.Publickey3Util;
//import com.topaz.trading.mobile.MobileLogincontroller;
//import com.topaz.trading.model.Client;
//import com.topaz.trading.model.Questions;
//import com.topaz.trading.repository.ScriptImp;
//import com.tr.nest.crypto.CryptoRSA;
//
//@Controller
//@RestController
//public class TpinLogincontroller {
//
//	@Autowired
//	Publickey3Util publickey3Util;
//
//	@Autowired
//	MarketwatchProvider marketwatchProvider;
//
//	@Autowired
//	ScriptImp scriptImp;
//
//	@Autowired
//	MobileLogincontroller mobileLogincontroller;
//
//	private static Logger logger = LogManager.getLogger(Logincontroller.class);
//
//	public String sessionValue, stat, tdata, sQuestions, scount, sIndex, Emsg, Message, sLastAccessInSec,
//			sPasswordReset, sUserToken, tomcatCount, UserSessionID, ejData, output, Pstatus, Result, mode, message, pwd,
//			Count, as, is, qa, loginid, loginMessage, uid, PublicKey4,PublicKEY3;
//
//	String ResetFlag = "2faResetFlag";
//
//	PrivateKey PrivateKey2;
//
//	@RequestMapping(value = "/Authenticate", method = RequestMethod.POST)
//	public ModelAndView CreateloginPage(HttpServletRequest request, HttpServletResponse response,
//			@RequestParam String userId, @RequestParam String password) {
//
//		HttpSession session = request.getSession();
//		session.setAttribute("userId", userId);
//
//		logger.info("Your userId is:" + userId);
//
//		ModelAndView mv = new ModelAndView("dashboard");
//
//		sessionValue = (String) session.getAttribute("userId");
//
//		String loginMode = null, Publickey3 = null, pubKey3 = null, eJdata = null, jKey = null, tomcatCount = null;
//
//		/*
//		 * The API document book-mark 03.01(getIntialKey), 03.01(getIntialKey),
//		 * 03.02(GetPreAuthenticationKey)
//		 * 
//		 */
//		try {
//		List<Object> publicKey3 = publickey3Util.authenticate(userId, password);
//		
//
//		if (publicKey3 == null) {
//			message = "Your ClientId or Password is Incorrect!.";
//			mv.addObject("clientid", userId);
//			mv.setViewName("login");
//			mv.addObject("message", message);
//		}
//
//		// System.out.println("Publickey3 : "+publicKey3.get(0).toString());
//
//		Publickey3 = publicKey3.get(0).toString();
//		pubKey3 = publicKey3.get(1).toString();
//		eJdata = publicKey3.get(2).toString();
//		jKey = publicKey3.get(3).toString();
//		tomcatCount = publicKey3.get(4).toString();
//		PrivateKey2 = (PrivateKey) publicKey3.get(5);
//		
//		session.setAttribute("PublicKEY3", Publickey3);
//		// MobileLogincontroller
//		String ResetFalgvalue = CheckResetFalgvalue(userId, password, request, response);
//
//		if (ResetFalgvalue == "NO") { // TEST200
//
//			ResetFalgvalue = "NO";
//			/*String PublicKeyTHREE = ", -----BEGIN PUBLIC KEY-----\r\n"
//					+ "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArYKCVdN8XC09jBJ/gCzZ\r\n"
//					+ "VeKLyR/oKSq171mRpAL1xCpGHPO6aA5xlkR+UJ74H0Vxk4a3eKnxwGmmIww4slXv\r\n"
//					+ "vrBOrut0Jxhk1354pzBh3JSVo+rk5rFdAUiFshCeFFvK768KSUc2Fy/4THH1bPIr\r\n"
//					+ "LZE8YwuimpuImZbfX3PeJz8jDjYwkk/n68lkgtv7+6OayztSxJ2Be8itweTAFoS9\r\n"
//					+ "Oy3bN/DqVK+LnSNBk4x9xS/DsyGtJLJf2BgEn3kOEJdxvMQXYx3baErSQU62BuBr\r\n"
//					+ "qVegfJVULkYgiZnRFvIEHfwveTi+3ozQ044lzHRu5CqM8d7P3wyVYI7ArXgi+OrY\r\n" + "lwIDAQAB";*/
//			
//			
//			PublicKey4 ="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnIcNdNZP9itWX5K+VLnDaF1+t/5Dp5H8JlFEKfA1in6oo2UbUonGE7+Zbvl5JpRiTt/ODkcvREzk8kJKJ7+wdVxR27mOcsXx3KW6N9Gyl/FuazA1I1PfozsecT+R79H+gUTQbrmhd0nnoKaWxYCrh20Qwv2FhrP5DSrMZULAh+TO4z/opz6BDyBRAtaPQBVr2FmBLvUEjV3IVtFeGdpTYduPoHlr6XwKndxIWFUAtMfJz9fpk8lq/jaJUeKLbAyn38SmIMkLjdx0Iuue3UxgFt/5BSxlcRAKbdmZQ7HNbCoUZAm2zIHIZZEY4cc3rxkl4YjZD7mLRW3F4fDCe43LhwIDAQAB";
//			//PublicKey4 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgyg/p/122aW64vwtJqwQw3i8EDHROWP5Sey9LuKPrOdafX7KkXVRvrRZqPy6bBWAT/DhoLAc5ViGl7DVQHGDZnGGgvyOVwKXgTBvf3HT3Qe6TWKDPJ/I+Gi4HlU19p3/FBsqgqpy1WM0Nzjzdm0RI9AjTw9XXln6PbRgVxmYltnHYHVRMObweH+4E2L9G+XYHqn4D9dglXaJaqKd7pxaRvsdyT8JODjjYuLhqITgOdWj0XZ2WsekZl5jEdF1IAY9obacWr41Qb5vZ841p/Z7rlZVLVV+go4tAQpV55X7SL7/3QVYBp2cg85wnnKzQVvZ/lml2KiSu2L7oZapl90vhQIDAQAB";
//			tomcatCount = "tomcat1";
//			// PublicKey4=sUserToken;
//			session.setAttribute("publicKey4", PublicKey4);
//			// session.setAttribute("TomcatCount",tomcatCount);
//			session.setAttribute("userId", userId);
//			session.setAttribute("Publickey3", Publickey3);
//
//			List<Client> clientidlist = scriptImp.VerifyClientId(userId);
//			
//			if (clientidlist.size() > 0) {
//
//				if (clientidlist.get(0).getPassword().equals(password)) {
//					message = "Succesfully Login";
//					mv.setViewName("tpinpage");
//					mv.addObject("clientid", userId);
//					mv.addObject("message", message);
//					mv.addObject("ResetFalg", ResetFalgvalue);
//				} else if (clientidlist.get(0).getPassword() != password) {
//					message = "Your Password is Incorrect!.";
//					mv.addObject("clientid", userId);
//					mv.setViewName("login");
//					mv.addObject("message", message);
//				}
//
//			}
//
//			else if (clientidlist.size() == 0) {
//				message = "Your ClientId or Password is Incorrect!.";
//				mv.addObject("clientid", userId);
//				mv.setViewName("login");
//				mv.addObject("message", message);
//			}
//
//		}
//
//		else if (ResetFalgvalue == "YES") { // TEST100
//
//			ResetFalgvalue = "YES";
//			String PublicKeyTHREE = ", -----BEGIN PUBLIC KEY-----\r\n"
//					+ "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArYKCVdN8XC09jBJ/gCzZ\r\n"
//					+ "VeKLyR/oKSq171mRpAL1xCpGHPO6aA5xlkR+UJ74H0Vxk4a3eKnxwGmmIww4slXv\r\n"
//					+ "vrBOrut0Jxhk1354pzBh3JSVo+rk5rFdAUiFshCeFFvK768KSUc2Fy/4THH1bPIr\r\n"
//					+ "LZE8YwuimpuImZbfX3PeJz8jDjYwkk/n68lkgtv7+6OayztSxJ2Be8itweTAFoS9\r\n"
//					+ "Oy3bN/DqVK+LnSNBk4x9xS/DsyGtJLJf2BgEn3kOEJdxvMQXYx3baErSQU62BuBr\r\n"
//					+ "qVegfJVULkYgiZnRFvIEHfwveTi+3ozQ044lzHRu5CqM8d7P3wyVYI7ArXgi+OrY\r\n" + "lwIDAQAB";
//			String PublicKey4 ="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnIcNdNZP9itWX5K+VLnDaF1+t/5Dp5H8JlFEKfA1in6oo2UbUonGE7+Zbvl5JpRiTt/ODkcvREzk8kJKJ7+wdVxR27mOcsXx3KW6N9Gyl/FuazA1I1PfozsecT+R79H+gUTQbrmhd0nnoKaWxYCrh20Qwv2FhrP5DSrMZULAh+TO4z/opz6BDyBRAtaPQBVr2FmBLvUEjV3IVtFeGdpTYduPoHlr6XwKndxIWFUAtMfJz9fpk8lq/jaJUeKLbAyn38SmIMkLjdx0Iuue3UxgFt/5BSxlcRAKbdmZQ7HNbCoUZAm2zIHIZZEY4cc3rxkl4YjZD7mLRW3F4fDCe43LhwIDAQAB";
//			//String PublicKey4 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgyg/p/122aW64vwtJqwQw3i8EDHROWP5Sey9LuKPrOdafX7KkXVRvrRZqPy6bBWAT/DhoLAc5ViGl7DVQHGDZnGGgvyOVwKXgTBvf3HT3Qe6TWKDPJ/I+Gi4HlU19p3/FBsqgqpy1WM0Nzjzdm0RI9AjTw9XXln6PbRgVxmYltnHYHVRMObweH+4E2L9G+XYHqn4D9dglXaJaqKd7pxaRvsdyT8JODjjYuLhqITgOdWj0XZ2WsekZl5jEdF1IAY9obacWr41Qb5vZ841p/Z7rlZVLVV+go4tAQpV55X7SL7/3QVYBp2cg85wnnKzQVvZ/lml2KiSu2L7oZapl90vhQIDAQAB";
//			tomcatCount = "tomcat1";
//			PublicKey4 = sUserToken;
//			// session.setAttribute("publicKey4", PublicKey4);
//			// session.setAttribute("TomcatCount",tomcatCount);
//			session.setAttribute("userId", userId);
//
//			List<Client> clientidlist = scriptImp.VerifyClientId(userId);
//
//			System.out.println(" clientidlist size :" + clientidlist.size());
//
//			if (clientidlist.size() > 0) {
//
//				System.out.println("if  " + clientidlist.size());
//				if (clientidlist.get(0).getPassword().equals(password)) {
//
//					message = "Please Reset your Password and Tpin ";
//					mv.addObject("clientid", userId);
//					mv.setViewName("ResetPassword");
//					mv.addObject("message", message);
//					mv.addObject("ResetFalg", ResetFalgvalue);
//
//				} else if (clientidlist.get(0).getPassword() != password) {
//
//					System.out.println(" else if size :" + clientidlist.size());
//
//					message = "Your Password is Incorrect!.";
//					mv.addObject("clientid", userId);
//					mv.setViewName("login");
//					mv.addObject("message", message);
//
//				}
//
//			}
//
//			else if (clientidlist.size() == 0) {
//				message = "Please Reset your Password and Tpin ";
//				mv.addObject("clientid", userId);
//				mv.setViewName("ResetPassword");
//				mv.addObject("message", message);
//				mv.addObject("ResetFalg", ResetFalgvalue);
//
//			}
//
//		}
//		}
//		catch (Exception e) {
//
//			message = "Your Database Could not Connect";
//			mv.addObject("clientid", userId);
//			mv.setViewName("login");
//			mv.addObject("message", message);
//			
//			logger.error("Unexpected Login error", e.getCause());
//
//		}
//		return mv;
//	}
//
//	@RequestMapping(value = "/SaveclientPassword", method = RequestMethod.POST)
//	public ModelAndView resetPasswordPage(HttpServletRequest request, HttpServletResponse response,
//			@RequestParam String clientid, @RequestParam String cnfrmpassword, @RequestParam String cnfrmtpin) {
//
//		String message = "";
//		ModelAndView mv = new ModelAndView("");
//		HttpSession session = request.getSession();
//
//		String PublicKeyTHREE = ", -----BEGIN PUBLIC KEY-----\r\n"
//				+ "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArYKCVdN8XC09jBJ/gCzZ\r\n"
//				+ "VeKLyR/oKSq171mRpAL1xCpGHPO6aA5xlkR+UJ74H0Vxk4a3eKnxwGmmIww4slXv\r\n"
//				+ "vrBOrut0Jxhk1354pzBh3JSVo+rk5rFdAUiFshCeFFvK768KSUc2Fy/4THH1bPIr\r\n"
//				+ "LZE8YwuimpuImZbfX3PeJz8jDjYwkk/n68lkgtv7+6OayztSxJ2Be8itweTAFoS9\r\n"
//				+ "Oy3bN/DqVK+LnSNBk4x9xS/DsyGtJLJf2BgEn3kOEJdxvMQXYx3baErSQU62BuBr\r\n"
//				+ "qVegfJVULkYgiZnRFvIEHfwveTi+3ozQ044lzHRu5CqM8d7P3wyVYI7ArXgi+OrY\r\n" + "lwIDAQAB";
//		
//		String PublicKey4 ="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnIcNdNZP9itWX5K+VLnDaF1+t/5Dp5H8JlFEKfA1in6oo2UbUonGE7+Zbvl5JpRiTt/ODkcvREzk8kJKJ7+wdVxR27mOcsXx3KW6N9Gyl/FuazA1I1PfozsecT+R79H+gUTQbrmhd0nnoKaWxYCrh20Qwv2FhrP5DSrMZULAh+TO4z/opz6BDyBRAtaPQBVr2FmBLvUEjV3IVtFeGdpTYduPoHlr6XwKndxIWFUAtMfJz9fpk8lq/jaJUeKLbAyn38SmIMkLjdx0Iuue3UxgFt/5BSxlcRAKbdmZQ7HNbCoUZAm2zIHIZZEY4cc3rxkl4YjZD7mLRW3F4fDCe43LhwIDAQAB";
//
//		//String PublicKey4 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgyg/p/122aW64vwtJqwQw3i8EDHROWP5Sey9LuKPrOdafX7KkXVRvrRZqPy6bBWAT/DhoLAc5ViGl7DVQHGDZnGGgvyOVwKXgTBvf3HT3Qe6TWKDPJ/I+Gi4HlU19p3/FBsqgqpy1WM0Nzjzdm0RI9AjTw9XXln6PbRgVxmYltnHYHVRMObweH+4E2L9G+XYHqn4D9dglXaJaqKd7pxaRvsdyT8JODjjYuLhqITgOdWj0XZ2WsekZl5jEdF1IAY9obacWr41Qb5vZ841p/Z7rlZVLVV+go4tAQpV55X7SL7/3QVYBp2cg85wnnKzQVvZ/lml2KiSu2L7oZapl90vhQIDAQAB";
//		tomcatCount = "tomcat1";
//
//		PublicKey4 = sUserToken;
//		// session.setAttribute("publicKey4", PublicKey4);
//		// session.setAttribute("TomcatCount",tomcatCount);
//		session.setAttribute("userId", clientid);
//
//		List<Client> clientidlist = scriptImp.VerifyClientId(clientid);
//
//		if (clientidlist.size() > 0) {
//			List<Client> updateTpinPasswordclientidlist = scriptImp.UpdatePasswordAndTpinByClientId(clientid,
//					cnfrmpassword, cnfrmtpin);
//
//			if (updateTpinPasswordclientidlist.size() > 0) {
//				message = "Your New Password and Tpin Saved Successfully";
//
//				String password = updateTpinPasswordclientidlist.get(0).getPassword();
//
//				// API call for 4.25 SetPassword
//				String setPassword = setPasswordforUser(clientid, password, tomcatCount, request, response);
//
//				mv.setViewName("login");
//				mv.addObject("message", message);
//
//			} else if (updateTpinPasswordclientidlist.size() == 0) {
//				message = "Your New Password and Tpin Not Saved";
//				mv.setViewName("ResetPassword");
//				mv.addObject("message", message);
//			}
//		} else if (clientidlist.size() == 0) {
//
//			List<Client> list = scriptImp.loginVerifyUpdate(clientid, cnfrmpassword, cnfrmtpin);
//
//			if (list.size() > 0) {
//				message = "Your New Password and Tpin Saved Successfully";
//				mv.setViewName("login");
//				mv.addObject("message", message);
//
//				String password = list.get(0).getPassword();
//				// API call for 4.25 SetPassword
//				String setPassword = setPasswordforUser(clientid, password, tomcatCount, request, response);
//
//			} else if (list.size() == 0) {
//				message = "Your New Password and Tpin Not Saved";
//				mv.setViewName("ResetPassword");
//				mv.addObject("message", message);
//			}
//
//		}
//
//		return mv;
//
//	}
//
//	@RequestMapping(value = "/TpinValidation", method = RequestMethod.POST)
//	public ModelAndView loginUsingTpin(HttpServletRequest request, HttpServletResponse response,
//			@RequestParam("clientid") String clientid, @RequestParam("tpin") String tpin) {
//
//		String tpinmessage = "";
//
//		ModelAndView mv = new ModelAndView("");
//		HttpSession session = request.getSession();
//		String PublicKey4 ="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAnIcNdNZP9itWX5K+VLnDaF1+t/5Dp5H8JlFEKfA1in6oo2UbUonGE7+Zbvl5JpRiTt/ODkcvREzk8kJKJ7+wdVxR27mOcsXx3KW6N9Gyl/FuazA1I1PfozsecT+R79H+gUTQbrmhd0nnoKaWxYCrh20Qwv2FhrP5DSrMZULAh+TO4z/opz6BDyBRAtaPQBVr2FmBLvUEjV3IVtFeGdpTYduPoHlr6XwKndxIWFUAtMfJz9fpk8lq/jaJUeKLbAyn38SmIMkLjdx0Iuue3UxgFt/5BSxlcRAKbdmZQ7HNbCoUZAm2zIHIZZEY4cc3rxkl4YjZD7mLRW3F4fDCe43LhwIDAQAB";
//
//		//String PublicKey4 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgyg/p/122aW64vwtJqwQw3i8EDHROWP5Sey9LuKPrOdafX7KkXVRvrRZqPy6bBWAT/DhoLAc5ViGl7DVQHGDZnGGgvyOVwKXgTBvf3HT3Qe6TWKDPJ/I+Gi4HlU19p3/FBsqgqpy1WM0Nzjzdm0RI9AjTw9XXln6PbRgVxmYltnHYHVRMObweH+4E2L9G+XYHqn4D9dglXaJaqKd7pxaRvsdyT8JODjjYuLhqITgOdWj0XZ2WsekZl5jEdF1IAY9obacWr41Qb5vZ841p/Z7rlZVLVV+go4tAQpV55X7SL7/3QVYBp2cg85wnnKzQVvZ/lml2KiSu2L7oZapl90vhQIDAQAB";
//		String tomcatCount = "tomcat1";
//
//		// PublicKey4=sUserToken;
//		session.setAttribute("publicKey4", PublicKey4);
//		session.setAttribute("TomcatCount", tomcatCount);
//		session.setAttribute("userId", clientid);
//
//		// SecondTime LogiIn checking
//		List<Client> SecondList = scriptImp.SecondTimeloginVerify(clientid, tpin);
//
//		if (SecondList.size() > 0) {
//			tpinmessage = "Succesfully Login";
//			mv.addObject("clientid", clientid);
//			mv.addObject("tpinmessage", tpinmessage);
//			mv.setViewName("dashboard");
//		} else {
//			mv.addObject("clientid", clientid);
//			tpinmessage = "Enter a Valid Tpin";
//
//			mv.addObject("tpinmessage", tpinmessage);
//			mv.setViewName("tpinpage");
//
//		}
//
//		return mv;
//	}
//
//	public String CheckResetFalgvalue(String userId, String password, HttpServletRequest request,
//			HttpServletResponse response) {
//
//		HttpSession session = request.getSession();
//		session.setAttribute("userId", userId);
//
//		String ResetFalgvalue = "";
//
//		if (userId.equals("TEST100")) {
//			ResetFalgvalue = "YES";
//		} else if (userId.equals("TEST200")) {
//			ResetFalgvalue = "NO";
//		}
//		session = request.getSession();
//		
//		String PublicKey3 = (String) session.getAttribute("PublicKEY3");
//		
//		System.out.println("PublicKey3 "+PublicKey3); 
//		//String tomcatCount = (String) session.getAttribute("TomcatCount");
//
//		String tomcatCount = "tomcat1";
//		//session.getAttribute("Publickey3", PublicKEY3);
////		@RequestMapping(value = "/mobileLogin", method = RequestMethod.POST)
////		public ResponseEntity<String> PositionBookPage(@RequestParam String clientid, @RequestParam String password,
////				@RequestParam String tpin, @RequestParam String imei, @RequestParam String apkVersion,
////				@RequestParam String loginDevice, @RequestParam String Source, @RequestParam String i_ActiveTime,
////				HttpServletRequest request, HttpServletResponse response) {
//
//			String mobileLoginSendData = "";
//		
//		
//
//			JSONObject mobileLoginouputJSON = new JSONObject();
//
//			JSONObject mobileLoginInput = new JSONObject();
//
//			mobileLoginInput.put("uid", userId);
//			mobileLoginInput.put("pwd", password);
//			mobileLoginInput.put("imei", "0000");
//			mobileLoginInput.put("apkVersion", "1.6.2.0");
//			mobileLoginInput.put("loginDevice", "windows");
//			mobileLoginInput.put("Source", "WEB");
//			mobileLoginInput.put("i_ActiveTime", "1200");
//
//			try {
//				String mobileLoginJdata = mobileLoginInput.toJSONString();
//				String jKey = CommonFunction.hashData(PublicKey3);
//
//				StringBuffer mobileloginUrlbuff = new StringBuffer(marketwatchProvider.getMobileloginUrl());
//				mobileloginUrlbuff
//						.append("jsessionid=" + "." + tomcatCount + "&jData=" + mobileLoginJdata + "&jKey=" + jKey + "");
//
//				URL mobileloginUrl = new URL(mobileloginUrlbuff.toString());
//				
//				logger.info("mobileloginUrl "+mobileloginUrl.toString()); 
//				
//				HttpURLConnection mobileloginconn = (HttpURLConnection) mobileloginUrl.openConnection();
//
//				mobileloginconn.setRequestMethod("POST");
//				mobileloginconn.setRequestProperty("Accept", "application/json");
//				if (mobileloginconn.getResponseCode() != 200) {
//					throw new RuntimeException("Failed : HTTP error code : " + mobileloginconn.getResponseCode());
//				}
//
//				BufferedReader br2 = new BufferedReader(new InputStreamReader((mobileloginconn.getInputStream())));
//				String output;
//				while ((output = br2.readLine()) != null) {
//
//					Object objec = JSONValue.parse(output);
//					mobileLoginouputJSON = (JSONObject) objec;
//					
//					/* * String SendData = mobileLoginouputJSON.toJSONString(); objec =
//					 * JSONValue.parse(SendData); mobileLoginouputJSON = (JSONObject) objec;
//					 */
//
//					mobileLoginSendData = mobileLoginouputJSON.toJSONString();
//					objec = JSONValue.parse(mobileLoginSendData);
//					
//					
//					mobileLoginouputJSON = (JSONObject) objec;
//					
//					
//					stat = (String) mobileLoginouputJSON.get("stat");
//					
//					logger.info("stat : "+stat+" Emsg : "+(String) mobileLoginouputJSON.get("Emsg")); 
//				}
//
//			} catch (Exception e) {
//				logger.error("Unexpected mobileLoginData error", e.getMessage());
//
//			}
//
////			return ResponseEntity.ok().body(mobileLoginSendData);
////		}
//		
//		
//		
//
//		return ResetFalgvalue;
//
//	}
//
//	private List<Object> getQuestionList(String sQuestions) {
//
//		List<Object> questionsObjList = new ArrayList<Object>();
//		ArrayList<Questions> questionsArrList = new ArrayList<Questions>();
//
//		String[] sQuestionsArr = sQuestions.split(Pattern.quote("|"));
//
//		for (int i = 0; i < sQuestionsArr.length; i++) {
//			questionsArrList.add(new Questions("" + i + 1, sQuestionsArr[i].toString()));
//		}
//
//		questionsObjList.add(questionsArrList);
//
//		return questionsObjList;
//	}
//
//	private String getLoginMode(String Publickey3) {
//
//		StringBuffer loginmodestatus = new StringBuffer();
//		String Loginurl = marketwatchProvider.getLoginurl();
//		String output = null;
//
//		try {
//			URL loginurl = new URL(Loginurl);
//			HttpURLConnection loginconn = (HttpURLConnection) loginurl.openConnection();
//			loginconn.setRequestMethod("POST");
//			loginconn.setRequestProperty("Accept", "application/json");
//
//			if (loginconn.getResponseCode() != 200) {
//				throw new RuntimeException("Failed : HTTP error code : " + loginconn.getResponseCode());
//			}
//
//			BufferedReader br = new BufferedReader(new InputStreamReader((loginconn.getInputStream())));
//
//			while ((output = br.readLine()) != null) {
//				loginmodestatus.append(output);
//
//			}
//			loginconn.disconnect();
//			logger.info("loginmodestatus : " + loginmodestatus);
//
//		} catch (Exception e) {
//			logger.error("Unexpected loginmode error", e.getMessage());
//		}
//
//		return loginmodestatus.toString();
//	}
//
//	private List<Object> getauthenticatePassword(String publicKey3, String pubKey3, String eJdata, String jKey,
//			String tomcatCount, HttpServletRequest request, HttpServletResponse response) {
//
//		HttpSession session = request.getSession();
//		String UserId = (String) session.getAttribute("userId");
//
//		logger.info("ValidPwd User: " + UserId);
//
//		List<Object> authenticatePasswordList = null;
//		try {
//			StringBuffer ValidPwd = new StringBuffer(marketwatchProvider.getValidPwdurl());
//			ValidPwd.append("jsessionid=" + "." + tomcatCount + "&jData=" + eJdata + "&jKey=" + jKey + "");
//
//			URL ValidPwdurl = new URL(ValidPwd.toString());
//			HttpURLConnection ValidPwdconn = (HttpURLConnection) ValidPwdurl.openConnection();
//
//			ValidPwdconn.setRequestMethod("POST");
//			ValidPwdconn.setRequestProperty("Accept", "application/json");
//			if (ValidPwdconn.getResponseCode() != 200) {
//				throw new RuntimeException("Failed : HTTP error code : " + ValidPwdconn.getResponseCode());
//			}
//
//			BufferedReader br2 = new BufferedReader(new InputStreamReader((ValidPwdconn.getInputStream())));
//			String output;
//
//			while ((output = br2.readLine()) != null) {
//
//				Object obj = JSONValue.parse(output);
//				JSONObject ValidPwdJson = (JSONObject) obj;
//				stat = (String) ValidPwdJson.get("stat");
//				tdata = (String) ValidPwdJson.get("tdata");
//				scount = (String) ValidPwdJson.get("scount");
//				ResetFlag = (String) ValidPwdJson.get("2faResetFlag");
//				sQuestions = (String) ValidPwdJson.get("sQuestions");
//				sIndex = (String) ValidPwdJson.get("sIndex");
//				Emsg = (String) ValidPwdJson.get("Emsg");
//			}
//
//			logger.info("===========ValidPwd Response===========");
//			logger.info("tdata : " + tdata);
//			logger.info("scount : " + scount);
//			logger.info("2faResetFlag : " + ResetFlag);
//			logger.info("sQuestions : " + sQuestions);
//
//			ValidPwdconn.disconnect();
//
//			authenticatePasswordList = new ArrayList<Object>();
//			authenticatePasswordList.add(stat);
//			authenticatePasswordList.add(tdata);
//			authenticatePasswordList.add(scount);
//			authenticatePasswordList.add(ResetFlag);
//			authenticatePasswordList.add(sQuestions);
//			authenticatePasswordList.add(sIndex);
//
//		} catch (Exception e) {
//			logger.error("Unexpected ValidPwd error", e.getMessage());
//
//		}
//
//		return authenticatePasswordList;
//	}
//
////	@RequestMapping(value = "/ValidAns", method = RequestMethod.POST)
////	public List<String> getAnswerValidation(@RequestParam String jKey,@RequestParam String tomcatCount,@RequestParam String uid,
////			@RequestParam String Count,@RequestParam String as,@RequestParam String is) {
////		
//
//	public List<String> getAnswerValidation(String jKey, String tomcatCount, HttpServletRequest request,
//			HttpServletResponse response) {
//		/*
//		 * Here Count as defined from ValidPwd response value scount as is defined
//		 * format ex:1-1 Ex:UserId,Count=scount,as=1-1,is=sIndex.replace('|', '-')
//		 * 
//		 */
//
//		HttpSession session = request.getSession();
//		String UserId = (String) session.getAttribute("userId");
//
//		logger.info("ValidAns User : " + UserId);
//
//		JSONObject ValidAnsInputJson = new JSONObject();
//
//		ValidAnsInputJson.put("uid", UserId);
//		ValidAnsInputJson.put("Count", scount); // Count as defined from ValidPwd response value scount
//		ValidAnsInputJson.put("as", "1-1");
//		ValidAnsInputJson.put("is", sIndex.replace('|', '-'));
//
//		String ValidAnsInputJdata = ValidAnsInputJson.toJSONString();
//		JSONObject AnswerValidationJson = new JSONObject();
//		List<String> AnswerValidationList = null;
//
//		try {
//			StringBuffer ValidAns = new StringBuffer(marketwatchProvider.getValidAnsurl());
//			ValidAns.append("jsessionid=" + "." + tomcatCount + "&jData=" + ValidAnsInputJdata + "&jKey=" + jKey + "");
//
//			URL ValidAnsurl = new URL(ValidAns.toString());
//
//			HttpURLConnection ValidAnsconn = (HttpURLConnection) ValidAnsurl.openConnection();
//			ValidAnsconn.setRequestMethod("POST");
//			ValidAnsconn.setRequestProperty("Accept", "application/json");
//
//			if (ValidAnsconn.getResponseCode() != 200) {
//				throw new RuntimeException("Failed : HTTP error code : " + ValidAnsconn.getResponseCode());
//			}
//
//			BufferedReader br3 = new BufferedReader(new InputStreamReader((ValidAnsconn.getInputStream())));
//
//			while ((output = br3.readLine()) != null) {
//
//				Object objec = JSONValue.parse(output);
//				AnswerValidationJson = (JSONObject) objec;
//
//				String SendData = AnswerValidationJson.toJSONString();
//				objec = JSONValue.parse(SendData);
//				AnswerValidationJson = (JSONObject) objec;
//
//				stat = (String) AnswerValidationJson.get("stat");
//				tdata = (String) AnswerValidationJson.get("tdata");
//				Message = (String) AnswerValidationJson.get("Message");
//				sLastAccessInSec = (String) AnswerValidationJson.get("sLastAccessInSec");
//				sPasswordReset = (String) AnswerValidationJson.get("sPasswordReset");
//				sUserToken = (String) AnswerValidationJson.get("sUserToken");// public key 4
//				UserSessionID = (String) AnswerValidationJson.get("UserSessionID");
//				loginid = (String) AnswerValidationJson.get("loginid");
//				loginMessage = (String) AnswerValidationJson.get("loginMessage");
//
//				AnswerValidationList = new ArrayList<String>();
//				AnswerValidationList.add(stat);
//				AnswerValidationList.add(tdata);
//				AnswerValidationList.add(Message);
//				AnswerValidationList.add(sLastAccessInSec);
//				AnswerValidationList.add(sPasswordReset);
//				AnswerValidationList.add(sUserToken);
//				AnswerValidationList.add(UserSessionID);
//				AnswerValidationList.add(loginid);
//				AnswerValidationList.add(loginMessage);
//
//			}
//
//			logger.info("============== Response for ValidAns =================");
//			logger.info("Response for ValidAns :stat :" + stat + "  tdata :" + tdata + "  message :" + Message);
//			ValidAnsconn.disconnect();
//
//		} catch (Exception e) {
//			logger.error("Unexpected ValidAns error", e.getMessage());
//
//		}
//		return AnswerValidationList;
//	}
//
////	@RequestMapping(value = "/SaveAns", method = RequestMethod.POST)
////	public String SaveQuestionAnswers(@RequestParam String jKey,@RequestParam String tomcatCount, @RequestParam String qa,@RequestParam String userId) {
//
//	public String SaveQuestionAnswers(@RequestParam String jKey, @RequestParam String tomcatCount,
//			HttpServletRequest request, HttpServletResponse response) {
//
//		HttpSession session = request.getSession();
//		String UserId = (String) session.getAttribute("userId");
//		logger.info("SaveAns  User : " + UserId);
//
//		StringBuffer SaveAnsResponse = new StringBuffer();
//		ModelAndView mv = new ModelAndView("Main");
//
//		JSONObject SaveAnswerJson = new JSONObject();
//
//		SaveAnswerJson.put("uid", UserId);
//		SaveAnswerJson.put("qa", "1|1|2|1|3|1|4|1|5|1");
//
//		String SaveJdata = SaveAnswerJson.toJSONString();
//
//		try {
//			StringBuffer SaveAns = new StringBuffer(marketwatchProvider.getSaveAnsurl());
//			SaveAns.append("jsessionid=" + "." + tomcatCount + "&jData=" + SaveJdata + "&jKey=" + jKey + "");
//
//			URL urL = new URL(SaveAns.toString());
//			HttpURLConnection conn5 = (HttpURLConnection) urL.openConnection();
//			conn5.setRequestMethod("POST");
//			conn5.setRequestProperty("Accept", "application/json");
//
//			if (conn5.getResponseCode() != 200) {
//				throw new RuntimeException("Failed : HTTP error code : " + conn5.getResponseCode());
//			}
//
//			BufferedReader br2 = new BufferedReader(new InputStreamReader((conn5.getInputStream())));
//			while ((output = br2.readLine()) != null) {
//				SaveAnsResponse.append(output);
//			}
//			logger.info("SaveAnsResponse :" + SaveAnsResponse.toString());
//			conn5.disconnect();
//
//		} catch (Exception e) {
//			logger.error("Unexpected SaveAns error", e.getMessage());
//
//		}
//
//		return SaveAnsResponse.toString();
//
//	}
//
//	// API 4.12 Change Passowrd
//	public String getChangePasswordByUserId(String tomcatCount, String jKey, HttpServletRequest request,
//			HttpServletResponse response) {
//
//		JSONObject ChangepwdInputJson = new JSONObject();
//		HttpSession session = request.getSession();
//		String UserId = (String) session.getAttribute("userId");
//
//		logger.info("Changepwd By UserId" + UserId);
//
//		ChangepwdInputJson.put("uid", UserId);
//		ChangepwdInputJson.put("sOldPwd", "abc123");
//		ChangepwdInputJson.put("sNewPwd", "abc@123");
////		ChangepwdInputJson.put("sOldTPwd", "");
////		ChangepwdInputJson.put("sNewTPwd", "");
//		ChangepwdInputJson.put("sTxFlag", "NO");
//
//		String ChangepwdInputJdata = ChangepwdInputJson.toJSONString();
//		JSONObject ChangepwdJson = new JSONObject();
//		try {
//			StringBuffer Changepwd = new StringBuffer(marketwatchProvider.getChangepwdurl());
//			Changepwd
//					.append("jsessionid=" + "." + tomcatCount + "&jData=" + ChangepwdInputJdata + "&jKey=" + jKey + "");
//
//			URL ChangepwdURL = new URL(Changepwd.toString());
//			HttpURLConnection Changepwdconn = (HttpURLConnection) ChangepwdURL.openConnection();
//			Changepwdconn.setRequestMethod("POST");
//			Changepwdconn.setRequestProperty("Accept", "application/json");
//
//			if (Changepwdconn.getResponseCode() != 200) {
//				throw new RuntimeException("Failed : HTTP error code : " + Changepwdconn.getResponseCode());
//			}
//			BufferedReader br3 = new BufferedReader(new InputStreamReader((Changepwdconn.getInputStream())));
//
//			while ((output = br3.readLine()) != null) {
//
//				Object objec = JSONValue.parse(output);
//				ChangepwdJson = (JSONObject) objec;
//
//				String SendData = ChangepwdJson.toJSONString();
//				objec = JSONValue.parse(SendData);
//				ChangepwdJson = (JSONObject) objec;
//
//				stat = (String) ChangepwdJson.get("stat");
//				Pstatus = (String) ChangepwdJson.get("stat");
//				Result = (String) ChangepwdJson.get("stat");
//
//			}
//
//			logger.info("============== Response for Changepwd =================");
//			logger.info("stat " + stat + "\nPstatus " + Pstatus + "\nResult " + Result + "");
//
//			Changepwdconn.disconnect();
//
//		} catch (Exception e) {
//			logger.error("Unexpected ChangePassword error", e.getMessage());
//
//		}
//		return ChangepwdJson.toJSONString();
//	}
//
//	// Password Reset API Implementation 4.25
//	public String setPasswordforUser(String clientid, String password, String tomcatCount, HttpServletRequest request,
//			HttpServletResponse response) {
//
//		System.out.println("clientid " + clientid + " password " + password + " tomcatCount " + tomcatCount);
//
//		HttpSession session = request.getSession();
//
//		JSONObject SetPasswordInputJson = new JSONObject();
//		JSONObject SetPasswordJson = new JSONObject();
//
//		try {
//			String pwd = password;
//			// String pwd = "abc123";
//			pwd = CommonFunction.hashDataPasswordIteration(pwd);
//
//			SetPasswordInputJson.put("uid", clientid);
//			SetPasswordInputJson.put("password", pwd);
//
//			String SetPasswordInputJdata = SetPasswordInputJson.toJSONString();
//
//			String PublicKeyTHREE = ", -----BEGIN PUBLIC KEY-----\r\n"
//					+ "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArYKCVdN8XC09jBJ/gCzZ\r\n"
//					+ "VeKLyR/oKSq171mRpAL1xCpGHPO6aA5xlkR+UJ74H0Vxk4a3eKnxwGmmIww4slXv\r\n"
//					+ "vrBOrut0Jxhk1354pzBh3JSVo+rk5rFdAUiFshCeFFvK768KSUc2Fy/4THH1bPIr\r\n"
//					+ "LZE8YwuimpuImZbfX3PeJz8jDjYwkk/n68lkgtv7+6OayztSxJ2Be8itweTAFoS9\r\n"
//					+ "Oy3bN/DqVK+LnSNBk4x9xS/DsyGtJLJf2BgEn3kOEJdxvMQXYx3baErSQU62BuBr\r\n"
//					+ "qVegfJVULkYgiZnRFvIEHfwveTi+3ozQ044lzHRu5CqM8d7P3wyVYI7ArXgi+OrY\r\n" + "lwIDAQAB";
//
//			String PublicKey4 = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgyg/p/122aW64vwtJqwQw3i8EDHROWP5Sey9LuKPrOdafX7KkXVRvrRZqPy6bBWAT/DhoLAc5ViGl7DVQHGDZnGGgvyOVwKXgTBvf3HT3Qe6TWKDPJ/I+Gi4HlU19p3/FBsqgqpy1WM0Nzjzdm0RI9AjTw9XXln6PbRgVxmYltnHYHVRMObweH+4E2L9G+XYHqn4D9dglXaJaqKd7pxaRvsdyT8JODjjYuLhqITgOdWj0XZ2WsekZl5jEdF1IAY9obacWr41Qb5vZ841p/Z7rlZVLVV+go4tAQpV55X7SL7/3QVYBp2cg85wnnKzQVvZ/lml2KiSu2L7oZapl90vhQIDAQAB";
//
//			String jKey = CommonFunction.hashData(PublicKeyTHREE);
//
//			StringBuffer SetPasswordsb = new StringBuffer(marketwatchProvider.getSetPasswordurl());
//			SetPasswordsb.append(
//					"jsessionid=" + "." + tomcatCount + "&jData=" + SetPasswordInputJdata + "&jKey=" + jKey + "");
//
//			URL SetPasswordURL = new URL(SetPasswordsb.toString());
//
//			System.out.println("SetPasswordURL " + SetPasswordURL.toString());
//
//			HttpURLConnection SetPasswordconn = (HttpURLConnection) SetPasswordURL.openConnection();
//			SetPasswordconn.setRequestMethod("POST");
//			SetPasswordconn.setRequestProperty("Accept", "application/json");
//
//			System.out.println("ResponseCode() " + SetPasswordconn.getResponseCode());
//
//			if (SetPasswordconn.getResponseCode() != 200) {
//				throw new RuntimeException("Failed : HTTP error code : " + SetPasswordconn.getResponseCode());
//			}
//			BufferedReader br3 = new BufferedReader(new InputStreamReader((SetPasswordconn.getInputStream())));
//
//			while ((output = br3.readLine()) != null) {
//
//				Object objec = JSONValue.parse(output);
//				SetPasswordJson = (JSONObject) objec;
//
//				String SendData = SetPasswordJson.toJSONString();
//				objec = JSONValue.parse(SendData);
//				SetPasswordJson = (JSONObject) objec;
//
//				stat = (String) SetPasswordJson.get("stat");
//				message = (String) SetPasswordJson.get("message");
//			}
//
//			logger.info("============== Response for SetPassword =================");
//			logger.info("stat " + stat + "\n message " + message + "");
//
//			SetPasswordconn.disconnect();
//
//		} catch (Exception e) {
//			logger.error("Unexpected SetPassword error : " + e.getMessage());
//
//		}
//
//		return SetPasswordJson.toJSONString();
//	}
//
//}
